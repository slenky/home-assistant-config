---
# Tuya Converted wallplug, not in use yet.
esphome:
  name: esp15
  platform: ESP8266
  board: esp8285

# WiFi connection
wifi:
  ssid: !secret wifi_iot_ssid
  password: !secret wifi_iot_password
  ap:
    ssid: esp15

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret esphome_esp15_api_password

# Enable over-the-air updates
ota:
  password: !secret esphome_esp15_ota_password

# Enable Web server
web_server:
  port: 80

# Sync time with Home Assistant
time:
  - platform: homeassistant
    id: homeassistant_time

# Text sensors with general information
text_sensor:
  - platform: version
    name: esphome_esp15_version
  - platform: wifi_info
    ip_address:
      name: esphome_esp15_ip
    ssid:
      name: esphome_esp15_ssid
    bssid:
      name: esphome_esp15_bssid

sensor:
  # Uptime sensor
  - platform: uptime
    name: esphome_esp15_uptime
  # WiFi Signal sensor
  - platform: wifi_signal
    name: esphome_esp15_wifi_signal
    update_interval: 10s
  # Power sensor
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: true
    cf_pin: GPIO04
    cf1_pin: GPIO05
    change_mode_every: 3
    update_interval: 3s
    # Current sensor
    current:
      name: esphome_esp15_current
      unit_of_measurement: A
      accuracy_decimals: 3
      filters:
        # Map 0.0 (from sensor) to 0.0 (true value)
        - calibrate_linear:
            - 0.0 -> 0.014
            - 0.07725 -> 0.074
            - 1.22153 -> 1.054
            - 1.30360 -> 1.129
            - 4.93921 -> 4.268
            - 11.37022 -> 9.797
        # Make everything below 0.01A appear as just 0A.
        # Furthermore it corrects 0.014A for the power usage of the plug.
        - lambda: if (x < (0.01 - 0.014)) return 0; else return (x - 0.014);
    # Voltage sensor
    voltage:
      name: esphome_esp15_voltage
      unit_of_measurement: V
      accuracy_decimals: 1
      filters:
        # Map 0.0 (from sensor) to 0.0 (true value)
        - calibrate_linear:
            - 0.0 -> 0.0
            - 555.06458 -> 230.0
            - 559.83197 -> 230.8
    # Power sensor
    power:
      id: power
      name: esphome_esp15_power
      unit_of_measurement: W
      accuracy_decimals: 0
      filters:
        # Map 0.0 (from sensor) to 0.0 (true value)
        - calibrate_linear:
            - 0.0 -> 1.23
            - 55.16593 -> 10.98
            - 1330.87805 -> 242.7
            - 1420.52258 -> 259.9
            - 3258.23779 -> 583.6
            - 12102.02637 -> 2206.0
        # Make everything below 2W appear as just 0W.
        # Furthermore it corrects 1.23W for the power usage of the plug.
        - lambda: if (x < (2 + 1.23)) return 0; else return (x - 1.23);
  # Total daily energy sensor
  - platform: total_daily_energy
    name: esphome_esp15_daily_energy
    power_id: power
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh

binary_sensor:
  # Binary sensor for the button press
  - platform: gpio
    name: esphome_esp15_button
    pin:
      number: GPIO3
      inverted: true
    on_press:
      - switch.toggle: relay

switch:
  # Switch to restart the plug
  - platform: restart
    name: esphome_esp15_restart
  # Switch to toggle the relay
  - platform: gpio
    id: relay
    name: esphome_esp15_switch
    pin: GPIO14
    on_turn_on:
      - light.turn_on: led
    on_turn_off:
      - light.turn_off: led

output:
  # Relay state led
  - platform: esp8266_pwm
    id: state_led
    pin:
      number: GPIO1
      inverted: true

light:
  # Relay state light
  - platform: monochromatic
    output: state_led
    id: led

# Uses the red LED as status indicator
status_led:
  pin:
    number: GPIO13
    inverted: true
